{"mappings":"AAAA;AAEA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,YAAY,SAAS,aAAa,CAAC;IACzC,MAAM,YAAY,SAAS,aAAa,CAAC;IACzC,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,UAAU;IAChB,MAAM,UAAU;IAChB,MAAM,aAAa;IACnB,MAAM,aAAa;IAEnB,SAAS;QACP,MAAM,WAAW,MAAM,IAAI,CAAC,MAAM;QAClC,MAAM,cAAc,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM;QAE9C,UAAU,QAAQ,GAAG,YAAY;QACjC,UAAU,QAAQ,GAAG,YAAY;QACjC,aAAa,QAAQ,GAAG,eAAe;QACvC,aAAa,QAAQ,GAAG,eAAe;IACzC;IAEA,UAAU,gBAAgB,CAAC,SAAS;QAClC,MAAM,SAAS,MAAM,SAAS;QAC9B,MAAM,cAAc,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM;QAE9C,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAC/B,OAAO,UAAU;QAEnB;IACF;IAEA,UAAU,gBAAgB,CAAC,SAAS;QAClC,IAAI,MAAM,IAAI,CAAC,MAAM,GAAG,SAAS;YAC/B,MAAM,SAAS,CAAC;YAChB;QACF;IACF;IAEA,aAAa,gBAAgB,CAAC,SAAS;QACrC,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY;YAC3C,MAAM,IAAI,CAAC,MAAM,IAAI,EAAE,OAAO,CAAC,CAAC,MAAQ,IAAI,UAAU;YACtD;QACF;IACF;IAEA,aAAa,gBAAgB,CAAC,SAAS;QACrC,IAAI,MAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY;YAC3C,MAAM,IAAI,CAAC,MAAM,IAAI,EAAE,OAAO,CAAC,CAAC,MAAQ,IAAI,UAAU,CAAC;YACvD;QACF;IACF;IAEA;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const appendRow = document.querySelector('.append-row');\n  const removeRow = document.querySelector('.remove-row');\n  const appendColumn = document.querySelector('.append-column');\n  const removeColumn = document.querySelector('.remove-column');\n  const table = document.querySelector('.field');\n\n  const minRows = 2;\n  const maxRows = 10;\n  const minColumns = 2;\n  const maxColumns = 10;\n\n  function recountButtons() {\n    const rowCount = table.rows.length;\n    const columnCount = table.rows[0].cells.length;\n\n    appendRow.disabled = rowCount >= maxRows;\n    removeRow.disabled = rowCount <= minRows;\n    appendColumn.disabled = columnCount >= maxColumns;\n    removeColumn.disabled = columnCount <= minColumns;\n  }\n\n  appendRow.addEventListener('click', () => {\n    const newRow = table.insertRow();\n    const columnCount = table.rows[0].cells.length;\n\n    for (let i = 0; i < columnCount; i++) {\n      newRow.insertCell();\n    }\n    recountButtons();\n  });\n\n  removeRow.addEventListener('click', () => {\n    if (table.rows.length > minRows) {\n      table.deleteRow(-1);\n      recountButtons();\n    }\n  });\n\n  appendColumn.addEventListener('click', () => {\n    if (table.rows[0].cells.length < maxColumns) {\n      Array.from(table.rows).forEach((row) => row.insertCell());\n      recountButtons();\n    }\n  });\n\n  removeColumn.addEventListener('click', () => {\n    if (table.rows[0].cells.length > minColumns) {\n      Array.from(table.rows).forEach((row) => row.deleteCell(-1));\n      recountButtons();\n    }\n  });\n\n  recountButtons();\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}